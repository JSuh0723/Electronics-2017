#include <Adafruit_GFX.h>
#include <Adafruit_NeoMatrix.h>
#include <Adafruit_NeoPixel.h>
#include <Wire.h>         //http://arduino.cc/en/Reference/Wire (included with Arduino IDE)
#include "RTClib.h"
#define PIN 6
#define NEOPIN 6

//DIGIT COLORS (HOURS)
  int hourred   = 130;
  int hourblue  = 130;
  int hourgreen = 130;
  //DIGIT COLORS (MINUTES)
  int minred    = 250;
  int minblue   = 250;
  int mingreen  = 250;

  int mytimehr;
  int mytimemin;
  int mytimesec;

typedef uint8_t Character[7];
const Character charmap[] = {
  {
    0b01110,
    0b10001,
    0b10001,
    0b10001,
    0b10001,
    0b10001,
    0b01110
  },
  {
    0b00100,
    0b01100,
    0b00100,
    0b00100,
    0b00100,
    0b00100,
    0b01110
  },
  {
    0b01110,
    0b10001,
    0b00001,
    0b00010,
    0b00100,
    0b01000,
    0b11111
  },
  {
    0b11111,
    0b00010,
    0b00100,
    0b00010,
    0b00001,
    0b10001,
    0b01110
  },
  {
    0b00010,
    0b00110,
    0b01010,
    0b10010,
    0b11111,
    0b00010,
    0b00010
  },
  {
    0b11111,
    0b10000,
    0b11110,
    0b00001,
    0b00001,
    0b10001,
    0b01110
  },
  {
    0b00110,
    0b01000,
    0b10000,
    0b11110,
    0b10001,
    0b10001,
    0b01110
  },
  {
    0b11111,
    0b00001,
    0b00010,
    0b00100,
    0b01000,
    0b01000,
    0b01000
  },
  {
    0b01110,
    0b10001,
    0b10001,
    0b01110,
    0b10001,
    0b10001,
    0b01110
  },
  {
    0b01110,
    0b10001,
    0b10001,
    0b01111,
    0b00001,
    0b00010,
    0b01100
  }
};

Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(11, 11, NEOPIN,
      NEO_MATRIX_BOTTOM  + NEO_MATRIX_LEFT +
      NEO_MATRIX_ROWS + NEO_MATRIX_ZIGZAG,
      NEO_GRB         + NEO_KHZ800);

void rainbowCycle(uint8_t wait);
void flashWords(void);
void pickAPixel(uint8_t x, uint8_t y);

void setup() {
  matrix.begin();
}

void loop() {
  displayDigits();
}

void draw(uint8_t x, uint8_t y, const Character &c, uint16_t color) {
  for (int i = 0; i < 7; i++) for (int j = 0; j < 5; j++) {
    if (bitRead(c[i], j)) matrix.drawPixel(x+4-j, y+i, color);
  }
};

void displayDigits() {
  uint8_t units, tens;
  uint16_t color;
   
  if (mytimesec/2 % 2) {
    units = mytimemin % 10;
    tens  = mytimemin / 10;
    //digit_mode color, minutes
    color = matrix.Color(minred,mingreen,minblue);
  } else {
    units = mytimehr % 10;
    tens  = mytimehr / 10;
    //digit_mode color, hours
    color = matrix.Color(hourred,hourgreen,hourblue);
  }
  matrix.clear();
 
  draw(0, 2, charmap[tens],  color);
  draw(6, 2, charmap[units], color);
 
  matrix.show();
}
